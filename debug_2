1) Fix the code to get the largest of three.
soln:
var aa = (f,s,t) => {
 if(f>s &&f>t){
 console.log(f)
 }
 else if(s>f && s>t){
 console.log(s)
 }
 else{
 console.log(t)}
}
aa(1,2,3)

Output:
3

2) Fix the code to Sum of the digits present in the number
soln: 
let n = "525";
function add(values)
{
let digits = values.split("").map(Number);
let sum = 0;
for(var i=0;i<digits.length ; i++){
 sum+=digits[i]
 }
 return sum;
}
console.log(add(n));

Output:
12

3) Fix the code to Sum of all numbers using IIFE function
soln: 
const arr = [9,8,5,6,4,3,2,1];
(function() {
 let sum = 0;
 for (let i = 0; i < arr.length; i++){
 sum += arr[i];
 }
 console.log(sum);
 
})(arr);

Output:
38
Execution Time:
0.073s
Memory Used:
8404kb

4) Fix the code to sum the number in that array
soln:
const num = [10, 20, 30, 40,50,60,70,80,90,100] 
const answer = (num) =>{
var sum = 0;
for(i=0  ; i<num.length ; i++){
    sum= sum + num[i];
}
console.log(sum)};
answer(num);

Output:
550

5) print all odd numbers in an array using IIFE function
soln:
var arr = [1, 2, 3, 5, 7, 79, 7, 2, 6, 9, 4];
(function() {
 for (var i = 0; i < arr.length; i++) {
 if (arr[i] % 2 !== 0) {
 console.log(arr[i]);
 }}
})(arr);

Output:
1
3
5
7
79
7
9

6) Fix the code to reverse.
soln:
(function(str){
 str1 = str.split("").reverse().join("");
 console.log(str1); 
})("abcd")

Output:
dcba

7)Fix the code to remove duplicates.
soln:
var res = function(arr){
     newArr = [];
 for(var i=0; i < arr.length; i++){

 if(newArr.indexOf(arr[i]) === -1) {
 newArr = newArr + arr[i]+" ";
  }
 }
 console.log(newArr)
}
res(["guvi","geek","guvi","duplicate","geeK"])

Output:
guvi geek duplicate geeK 

8) Sum of odd numbers in an array
soln:
var as= [12,34,5,6,2,56,6,2,1];
 var s= as.reduce(function(a,c){
  if(c%2 !== 0)
  {
  return a + c;
  }else{
    return a;
  }
 });
 console.log(s);

